#!/bin/bash

PSD="${BASH_SOURCE%/*}" 

DEPENDS_ON errors \
	path \
	exists 

form_and_verify_path()
{
	local path="$(path_combine "$@")"
	file_exists? "${path}" || 
	{
		fail "Unable to find file ${path}"
	}	
	echo "${path}"
}

main()
{
	# As required by Seil when remapping the caps lock key:
	# Umap the caps lock key within OS X preferences
	local path="$(form_and_verify_path "${PSD}" unmap_caps.scpt)"
	msg_info "Running ${path}"
	osascript "${path}" 

	# Steps to create the plist in the first place:
	# plutil -convert xml1 -o ~/tmp/karabiner.plist ~/Library/Preferences/org.pqrs.Karabiner.plist
	path="$(form_and_verify_path "${PSD}" karabiner.plist)"
	msg_info "Running plist defaults into Karabiner from ${path} ..."
	defaults import org.pqrs.Karabiner "${path}"

	# Run in Karabiner defaults
	path="$(form_and_verify_path "${PSD}" karabiner_import)"
	msg_info "Running in Karabiner defaults from ${path} ..."
	"${path}"
	
	# Restart Kabarina
	msg_info "Restarting Karabiner ..."
	/Applications/Karabiner.app/Contents/Library/bin/karabiner relaunch

	# Run in Seil default
	path="$(form_and_verify_path "${PSD}" seil_import)"
	msg_info "Running in Seil defaults from ${path} ..."
	"${path}"

	# Restart Seil
	msg_info "Restarting Seil ..."
	/Applications/Seil.app/Contents/Library/bin/seil relaunch
}

enable_errors
main 
exit $?
