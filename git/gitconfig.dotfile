[include]

# Separate out all user specific config into config file outside of git
path = ~/.gitlocal

[init]

# Setup default hooks
templatedir = ~/.git_template

[alias]

# View abbreviated SHA, description, and history graph of the latest 20 commits
l = log --pretty=oneline -n 20 --graph --abbrev-commit

# View the current working tree status using the short format
s = status -s

# Show the diff between the latest commit and the current state
d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

# Re-index ctags
ctags = !".git/hooks/ctags"

# repository size
size = count-objects -vH

# HEAD
head = rev-parse HEAD

[apply]

# Detect whitespace errors when applying a patch
whitespace = fix

[core]

# Use custom `.gitignore` and `.gitattributes`
excludesfile = ~/.gitignore
attributesfile = ~/.gitattributes

# Treat spaces before tabs and all kinds of trailing whitespace as an error
# [default] trailing-space: looks for spaces at the end of a line
# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
whitespace = space-before-tab,-indent-with-non-tab,trailing-space

# Make `git rebase` safer on OS X
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false

# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false

[color]

# Use colors in Git commands that are capable of colored output when
# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
ui = auto

[color "branch"]

current = yellow reverse
local = yellow
remote = green

[color "diff"]

meta = yellow bold
frag = magenta bold # line info
old = red # deletions
new = green # additions

[color "status"]

added = yellow
changed = green
untracked = cyan

[diff]

# Detect copies as well as renames
renames = copies

[diff "bin"]

# Use `hexdump` to diff binary files
textconv = hexdump -v -C

[help]

# Automatically correct and execute mistyped commands
autocorrect = 1

[merge]

# Include summaries of merged commits in newly created merge commit messages
log = true

