#!/usr/bin/env bash

_SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$_SCRIPT_PATH" || exit 1

# Bring in the core library and enable global error handler
# No futher need to check return codes after this point ...
source ./lib/cli-utils.sh || exit 1

# https://gist.github.com/cowboy/3118588
function sudo_keepalive()
{
  # Ask for administrator password upfront
  sudo -v

  # Keep-alive: update existing sudo timestamp if set
  #+ $$: PID of the parent process (or parent script)
  #+ kill -0 PID: exits with 0 if the process associated with PID is running
  #+ kill -0 "$$" || exit: aborts while loop after process stops running
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

function user_prompt()
{
  local question answer
  question="$1"

  # pattern replace out all whitespace
  while [ -z "${answer// }" ]; do
    msg_prompt "$question" >&2
    read -r answer
  done

  echo "$answer"
}

function get_git_details()
{
  export GIT_NAME
  export GIT_EMAIL

  GIT_NAME="$(user_prompt "Enter git user name")"
  GIT_EMAIL="$(user_prompt "Enter git email")"
}

function install_prequisites()
{
  # Ensure xcode command line tools are installed
  msg_info "Installing XCode CLI tools  ..." >&2
  sudo xcode-select --install > /dev/null 2>&1
  if (( $? != 0 )); then
    msg_info "Already installed" >&2
  fi
}

function run_installers()
{
  local installer

  msg_info "Looking for installers in all subdirectories..." >&2
  find . -name 'install' -mindepth 2 -maxdepth 3 -not -path '*#/#' | \
    while read -r installer; do
      msg_info "Found installer $installer" >&2
      "$installer"
      if (( $? != 0 )); then
        msg_error "Unexpected issue running installer $installer" >&2
        return 1
      fi
    done
}

function install_packages()
{
  ./packages/brew-apps || return
  ./packages/brew-taps || return
  ./packages/cask-apps || return
  ./packages/cask-fonts || return
  ./packages/gem-packages || return
  ./packages/go-packages || return
  ./packages/mix-packages || return
  ./packages/npm-packages || return
  ./packages/pip-packages || return
  ./packages/vagrant-plugins || return
}

function main()
{
  local answer

  # we are going to be doing a lot of brew installations
  # so ask for the github api token up front
  if [ ! "$HOMEBREW_GITHUB_API_TOKEN" ]; then
    msg_error "Please set the HOMEBREW_GITHUB_API_TOKEN environment variable and retry" >&2
    msg_info "This is just an access token created within GitHub with NO ADDED SCOPES" >&2
    return 1
  fi

  msg_warn "** Asking for sudo privileges up front ***" >&2
  msg_warn "These privileges will last for the duration of the running of this script" >&2
  sudo_keepalive || return

  # get the users git details
  # these will be baked into .gitlocal
  get_git_details || return

  msg_info "Setting up ssh keypairs for github access..." >&2
  ./scripts/setup-ssh "$GIT_EMAIL"
  if (( $? != 0 )); then
    msg_error "Unexpected issue setting up ssh keypairs" >&2
    return 1
  fi

  msg_warn "Public keypair has been copied to clipboard"
  msg_prompt "Please add this to your github account then hit enter to continue"
  read -r

  msg_info "Initializing all submodules..." >&2
  git submodule update --init --recursive
  if (( $? != 0 )); then
    msg_error "Unexpected issue initializing git submodules" >&2
    return 1
  fi

  msg_info "Installing prerequisites..." >&2
  install_prequisites || return

  msg_info "Calling symlink installer..." >&2
  ./scripts/link-repos-to-home
  if (( $? != 0 )); then
    msg_error "Unexpected issue installing the symlinks" >&2
    return 1
  fi

  msg_info "Calling into homebrew installer..." >&2
  ./scripts/install-package-managers
  if (( $? != 0 )); then
    msg_error "Unexpected issue installing homebrew" >&2
    return 1
  fi

  msg_info "Installing packages..." >&2
  install_packages
  if (( $? != 0 )); then
    msg_error "Unexpected issue installing packages" >&2
    return 1
  fi

  msg_info "Running in all installers..." >&2
  run_installers
  if (( $? != 0 )); then
    msg_error "Unexpected issue running in installers" >&2
    return 1
  fi
}

main
exit $?

