#!/usr/bin/env bash

_SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$_SCRIPT_PATH" || exit 1

# Bring in the core library and enable global error handler
# No futher need to check return codes after this point ...
source ./lib/cli-utils.sh || exit 1

# https://gist.github.com/cowboy/3118588
function sudo_keepalive()
{
  # Ask for administrator password upfront
  sudo -v

  # Keep-alive: update existing sudo timestamp if set
  #+ $$: PID of the parent process (or parent script)
  #+ kill -0 PID: exits with 0 if the process associated with PID is running
  #+ kill -0 "$$" || exit: aborts while loop after process stops running
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

function install_prequisites()
{
  # Ensure xcode command line tools are installed
  msg_info "Installing XCode CLI tools  ..."
  sudo xcode-select --install > /dev/null 2>&1
  if (( $? != 0 )); then
    msg_info "Already installed"
  fi
}

function main()
{
  msg_warn "** Asking for sudo privileges up front ***"
  msg_warn "These privileges will last for the duration of the running of this script"
  sudo_keepalive || return

  msg_info "Installing prerequisites ..."
  install_prequisites || return

  msg_info "Calling symlink installer ..."
  ./scripts/link-repos-to-home
  if (( $? != 0 )); then
    msg_error "Unexpected issue installing the symlinks"
    false; return;
  fi
}

main
exit $?

