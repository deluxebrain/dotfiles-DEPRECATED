#!/bin/bash

PSD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

DEPENDS_ON path \
	exists 

USE_GLOBAL_ERROR_HANDLER

function run_custom_installer()
{
	customInstallerPath="$(path_combine "${PSD}" "${reposName}")"
	if [ -x "${customInstallerPath}" ]; then
		msg_info "Found custom installer for ${reposName}"
		msg_info "Running script: ${customInstallerPath}"
		"${customInstallerPath}" "${reposPath}"
	else
		msg_info "No custom installer found for ${reposName}"
	fi
}

function generate_helptags()
{
	if [ -d "./doc" ]; then
		msg_info "Generating helptags ..."	
		vim -u NONE -c "helptags doc" -c -q
	else
		msg_ingo "No helptags found"
	fi 
}

function main()
{
	local pathToBundles
	local reposPath
	local reposName
	local customInstallerPath

	pathToBundles="/Users/$USER/.vim/bundle"
	dir_exists? "${pathToBundles}" || \
		fail "Unable to location vim bundles at ${pathToBundles}"

	for reposPath in ${pathToBundles}/*
	do
	(
		msg_info "Changing directory to ${reposPath}"
		cd "${reposPath}" || { false; return; }
		
		reposName="$(git name)"
		msg_info "Installing ${reposName}"
		git submodule update --init --recursive

		run_custom_installer
		generate_helptags
	)
	done
}

main "$@" 
exit $?

