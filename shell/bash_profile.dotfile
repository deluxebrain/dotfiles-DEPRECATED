#!/bin/bash

# Interactive login shell configuration files:
#- /etc/profile, then the first of:
#- ~/.bash_profile
#- ~/.bash_login
#- ~/.profile

# Sourced for interactive login sessions
# - New terminal windows (inc. new tabs and splits)
# Note - new shells created using e.g. `bash` are interactive non-login sessions
# and inherit the environment of the parent shell

# The bash_profile should contain any configuration that you want to add to the
# shell environment to be available to the current shell and all child processes
# This includes:
# - Environment variables ( those that are exported )
# - Functions ( those that are exported )
# NOTE that aliases are NOT exported and hence should not live here
# The rest ( e.g. aliases ) should live in the .bashrc

#-------------------------------------------------------------------------------

export USE_POWERLINE=
export USE_TMUX=

function set_shelloptions()
{
  # list using
  # shopt | grep on

  # expand aliases (e.g. in functions that use them)
  shopt -s expand_aliases

  # Case-insensitive globbing (used in pathname expansion)
  shopt -s nocaseglob

  # Append to the Bash history file, rather than overwriting it
  shopt -s histappend

  # Autocorrect typos in path names when using `cd`
  shopt -s cdspell

  # Perform recursive globbing on **
  # e.g this:
  # find . -type f -name "*.py" -print0 | xargs -0 cat | wc -l
  # becomes this:
  # wc **/*.py -l
  shopt -s globstar
}
  
function start_tmux()
{
  local client_count client_id
  local grouped_session 

  # Return if tmux has already been fired up
  [ -z "${TMUX}" ] || return;

  # Tmux has a reliance on python being configured
  # ( tmux / powerline integration )
  if which pyenv > /dev/null; then
    export PYENV_ROOT=/usr/local/var/pyenv
    eval "$(pyenv init -)"
  fi

  # Create session identifier for the primary session
  # Default to username if no explicit sesison name provided
  local global_session="${USER}"

  # does this session already exist?
  # create it if not 
  # -d	: detached from current terminal  
  if ! tmux has-session -t "${global_session}" &>2 /dev/null ; then
    tmux new-session -d -s "${global_session}"
  fi

  # does he session already have clients attached ?
  client_count=$(tmux list-clients | wc -l)
  if (( client_count > 0 )); then

    # form session name for grouped session
    client_id=1
    grouped_session="${global_session}_${client_id}"
    while tmux has-session -t "${grouped_session}" > /dev/null 2>&1
    do
      ((client_id++)) # shorthand for increment
      grouped_session="${global_session}_${client_id}"
    done

    # -2	: 256 color
    # -t    : grouped with named session so they share same set of windows 
    # exec	: replace the current shell (needed to make exit work)
    # set to automatically destroy the grouped session when last window closed
    exec tmux -2 new-session -d \
      -t "${global_session}" \
      -s "${grouped_session}" \
      \; set-option destroy-unattached \
      \; new-window \
      \; attach-session -t "${grouped_session}"
  else
      exec tmux -2 attach-session -t "${global_session}"
  fi 
}

function main()
{
  set_shelloptions

  # Bring in global (checked into git) and local (not-checked into git) exports
  # shellcheck source=/dev/null
  [ -f "${HOME}"/.environment/path ] && source "${HOME}"/.environment/path
  
  # shellcheck source=/dev/null
  [ -f "${HOME}"/.environment/exports ] && source "${HOME}"/.environment/exports
  
  # shellcheck source=/dev/null
  [ -f "${HOME}"/secrets/localrc ] && source "${HOME}"/secrets/localrc

  # Bring in helper functions
  local file
  for file in ~/.environment/functions/*.sh; do
    # shellcheck source=/dev/null
    source "$file"
  done

  # Set item to use the generated dynamic profile
  [ -n "${ITERM_PROFILE_NAME}" ] && set_iterm_profile "${ITERM_PROFILE_NAME}"
  
  # shellcheck source=/dev/null
  [ -f "${HOME}"/.bashrc ] && source "${HOME}"/.bashrc
}

if [[ (! -z "${USE_TMUX+.}") && (-z "${TMUX}") ]]; then
  start_tmux
else
  main
fi

unset -f set_shelloptions
unset -f start_tmux
unset -f main

