#!/bin/bash
#
# CreateProfile
#
# This creates an iTerm2 dynamic profile based on the supplied template
# and configuration

PSD="${BASH_SOURCE%/*}"

DEPENDS_ON exists \
	prompt \
	path

function main()
{
	# Load config
        local config_path="$(path_combine "${PSD}" "create_profile.conf")"
        file_exists? "${config_path}" || \
                fail "Unable to find config file ${config_path}"
        source ${config_path} || return

	# Create placeholder profile plist file
	dir_exists? "${ITERM_PROFILE_DIR}" || \
		fail "Export variable ITERM_PROFILE_DIR not set or not valid path"
	local profile_path="$(path_combine "${ITERM_PROFILE_DIR}" "${_PROFILE_NAME}.plist")"
	msg_info "Creating profile ${_PROFILE_NAME} as ${profile_path} ..."
	cat /dev/null >| "${profile_path}" || \
		fail "Unable to create profile ${profile_path}"

	# form path to template
	local template_path="$(path_combine "${PSD}" "profile_template.plist")"
	file_exists? "${template_path}" || \
		fail "Unable to find profile template ${template_path}"

	# form path to colorscheme plist
	local colorscheme_path="$(path_combine \
		"$(gpath)" \
		"themes" \
		"${_PROFILE_COLORSCHEME_NAME}")"
	file_exists? "${colorscheme_path}" || \
		fail "Unable to find colorscheme referenced by ${_PROFILE_COLORSCHEME_NAME}"

	# merge the following to form the profile:
	# - The transformed template
	# - The json converted colorscheme plist
	# ---
	# -s	
	#	slurp; run entire stream into single array and run filters once
	#	i.e. form single array from elements from all files
	# .[0].Profiles[0]
	#	select the first element of the Profiles field of the first outer array
	# +=
	#	append the rhs to the lhs
	# .[1]
	#	select the second element of the outer array
	# | .[0]
	#	run a second filter that only returns the first element
	# <(...)	
	#	use subshells to pipe multiple arguments to jq
	# ---
	msg_info "Transforming ${template_path} to form profile"
	jq -s '.[0].Profiles[0] += .[1] | .[0]' \
		<(envsubst < "${template_path}") \
		<(plutil -convert json "${colorscheme_path}" -o -) \
		> "${profile_path}"
	[ ! $? -eq 0 ] && \
		fail "Unable to merge template and colorscheme"

	set_iterm_profile "${_PROFILE_NAME}" || \
		fail "Unable to set ${_PROFILE_NAME} as current profile"

	do_iterm_growl "Profile ${_PROFILE_NAME} created and set as current profile"
}

main
exit $?

